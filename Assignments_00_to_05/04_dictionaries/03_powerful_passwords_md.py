# -*- coding: utf-8 -*-
"""03_powerful_passwords.md

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k0KUzJA2zXR4OS5Sc7-yh-zgaSlnEtet

# 04_dictionaries
03_powerful_passwords.md
"""

from hashlib import sha256

def hash_password(password):
    """
    Takes in a password and returns the SHA256 hashed value for that specific password.

    Args:
    - password (str): The password to hash.

    Returns:
    - str: The hashed password.
    """
    # Hash the password and return its hexadecimal representation
    return sha256(password.encode()).hexdigest()

def login(email, stored_logins, password_to_check):
    """
    Checks if the hashed password entered matches the stored hash for a specific email.

    Args:
    - email (str): The email for which to check the password.
    - stored_logins (dict): A dictionary of email -> hashed_password pairs.
    - password_to_check (str): The password entered by the user to verify.

    Returns:
    - bool: True if the hashed password matches the stored hash, False otherwise.
    """
    # Check if email exists and then compare the hashes
    if email in stored_logins and stored_logins[email] == hash_password(password_to_check):
        return True
    return False

def main():
    # Sample stored logins dictionary with hashed passwords
    stored_logins = {
        "example@gmail.com": "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",  # hash for 'password'
        "code_in_placer@cip.org": "973607a4ae7b4cf7d96a100b0fb07e8519cc4f70441d41214a9f811577bb06cc",  # hash for 'Karel'
        "student@stanford.edu": "882c6df720fd99f5eebb1581a1cf975625cea8a160283011c0b9512bb56c95fb"  # hash for '123!456?789'
    }

    # Test login with different cases
    print(login("example@gmail.com", stored_logins, "password"))  # Should return True
    print(login("example@gmail.com", stored_logins, "word"))  # Should return False

    print(login("code_in_placer@cip.org", stored_logins, "Karel"))  # Should return True
    print(login("code_in_placer@cip.org", stored_logins, "karel"))  # Should return False

    print(login("student@stanford.edu", stored_logins, "123!456?789"))  # Should return True
    print(login("student@stanford.edu", stored_logins, "password"))  # Should return False

if __name__ == '__main__':
    main()